================================================================================
TYPESCRIPT/JAVASCRIPT BOOK EXAMPLES - CONSOLIDATED TEST FILE
================================================================================

Generated: 2025-07-31 15:44:39
Total examples: 36
TypeScript examples: 29
JavaScript examples: 7
Mode: Error examples only
Chapters tested: 3

================================================================================
TYPESCRIPT CHECK RESULTS
================================================================================
❌ TypeScript checking failed:

Checking example_08.ts: ✅ OK

Checking example_09.ts: ✅ OK

Checking example_10.ts: ✅ OK

Checking example_11.ts: ✅ OK

Checking example_12.ts: ✅ OK

Checking example_13.ts: ❌ FAILED
03/example_13.ts(13,16): error TS2304: Cannot find name 'generateId'.
03/example_13.ts(17,34): error TS2307: Cannot find module './user' or its corresponding type declarations.


Checking example_14.ts: ✅ OK

Checking example_15.ts: ❌ FAILED
03/example_15.ts(23,51): error TS2339: Property 'type' does not exist on type 'never'.


Checking example_16.ts: ✅ OK

Checking example_17.ts: ✅ OK

Checking example_18.ts: ❌ FAILED
03/example_18.ts(6,13): error TS2367: This comparison appears to be unintentional because the types 'number' and 'string' have no overlap.
03/example_18.ts(7,13): error TS2367: This comparison appears to be unintentional because the types 'number' and 'string' have no overlap.


Checking example_19.ts: ❌ FAILED
03/example_19.ts(22,21): error TS2339: Property 'port' does not exist on type '{ timeout: number; }'.


Checking example_20.ts: ❌ FAILED
03/example_20.ts(20,1): error TS2304: Cannot find name 'user'.


Checking example_21.ts: ❌ FAILED
03/example_21.ts(7,9): error TS2451: Cannot redeclare block-scoped variable 'name'.
node_modules/typescript/lib/lib.dom.d.ts(38505,15): error TS2451: Cannot redeclare block-scoped variable 'name'.


Checking example_22.ts: ❌ FAILED
03/example_22.ts(9,25): error TS2552: Cannot find name 'numbers'. Did you mean 'Number'?


Checking example_23.ts: ✅ OK

Checking example_24.ts: ❌ FAILED
03/example_24.ts(6,25): error TS2304: Cannot find name 'Config'.
03/example_24.ts(8,41): error TS2304: Cannot find name 'Config'.
03/example_24.ts(8,58): error TS2304: Cannot find name 'Config'.
03/example_24.ts(9,10): error TS2304: Cannot find name 'config'.


Checking example_25.ts: ✅ OK

Checking example_26.ts: ✅ OK

Checking example_27.ts: ✅ OK

Checking example_28.ts: ✅ OK

Checking example_29.ts: ✅ OK

Checking example_30.ts: ✅ OK

Checking example_31.ts: ❌ FAILED
03/example_31.ts(6,6): error TS2300: Duplicate identifier 'Partial'.
03/example_31.ts(10,28): error TS2304: Cannot find name 'User'.
node_modules/typescript/lib/lib.es5.d.ts(1585,6): error TS2300: Duplicate identifier 'Partial'.


Checking example_32.ts: ✅ OK

Checking example_33.ts: ❌ FAILED
03/example_33.ts(6,51): error TS2304: Cannot find name 'User'.


Checking example_34.ts: ✅ OK

Checking example_35.ts: ✅ OK

Checking example_36.ts: ✅ OK

================================================================================
JAVASCRIPT CHECK RESULTS
================================================================================
✅ All 7 JavaScript files passed syntax check!

Checking example_01.js: ✅ OK

Checking example_02.js: ✅ OK

Checking example_03.js: ✅ OK

Checking example_04.js: ✅ OK

Checking example_05.js: ✅ OK

Checking example_06.js: ✅ OK

Checking example_07.js: ✅ OK

Note: Showing 10 examples with errors out of 36 total examples.
Use --everything flag to include all examples.

================================================================================
CHAPTER: 03
Examples: 10 (showing errors only, 36 total)
================================================================================

----------------------------------------
Example 01 (Original #13)
File: 03\example_13.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2304: Cannot find name 'generateId'.
  • TS2307: Cannot find module './user' or its corresponding type declarations.
----------------------------------------
// user.ts
export interface User {
  id: number
  name: string
}

export function createUser(name: string): User {
  return { id: generateId(), name }
}

// main.ts
import { User, createUser } from "./user"

const newUser: User = createUser("Alice")

----------------------------------------
Example 02 (Original #15)
File: 03\example_15.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2339: Property 'type' does not exist on type 'never'.
----------------------------------------
type UserAction = 
  | { type: "login"; credentials: string }
  | { type: "logout"; userId: string }
  | { type: "updateProfile"; userId: string; data: any }

function handleUserAction(action: UserAction): void {
  switch (action.type) {
    case "login":
      console.log(`Authenticating with ${action.credentials}`)
      break
    case "logout":
      console.log(`Clearing session for user ${action.userId}`)
      break
    case "updateProfile":
      console.log(`Updating profile for user ${action.userId}`)
      break
    default:
      throw new Error(`Unhandled action: ${action.type}`)
  }
}

----------------------------------------
Example 03 (Original #18)
File: 03\example_18.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2367: This comparison appears to be unintentional because the types 'number' and 'string' have no overlap.
  • TS2367: This comparison appears to be unintentional because the types 'number' and 'string' have no overlap.
----------------------------------------
console.log(5 == "5")  // true (type coercion)
console.log(5 === "5") // false (strict equality)

// Always prefer strict equality
function isValidId(id: unknown): id is number {
  return typeof id === "number" && id > 0
}

----------------------------------------
Example 04 (Original #19)
File: 03\example_19.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2339: Property 'port' does not exist on type '{ timeout: number; }'.
----------------------------------------
// Add missing helper function
function checkUserPermission(): boolean {
  return Math.random() > 0.5 // Simulate permission check
}

// Boolean logic
const isAuthenticated = true
const hasPermission = checkUserPermission()
const canAccess = isAuthenticated && hasPermission

// Short-circuit evaluation for default values
const user = { name: "", age: 30 }
const username = user.name || "Anonymous"

// Nullish coalescing for more precise defaults
const config = { timeout: 5000 }
const port = config.port ?? 3000 // Only replaces null/undefined, not 0 or ""

----------------------------------------
Example 05 (Original #20)
File: 03\example_20.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2304: Cannot find name 'user'.
----------------------------------------
interface User {
  profile?: {
    address?: {
      street: string
      city: string
    }
  }
}

function getCity(user: User): string | undefined {
  return user.profile?.address?.city
}

// Works with method calls too
user.processPayment?.()

----------------------------------------
Example 06 (Original #21)
File: 03\example_21.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2451: Cannot redeclare block-scoped variable 'name'.
  • TS2451: Cannot redeclare block-scoped variable 'name'.
----------------------------------------
const user = { name: "Alice", age: 30, email: "alice@example.com" }
const { name, ...otherProps } = user

const numbers = [1, 2, 3, 4, 5]
const [first, second, ...rest] = numbers

----------------------------------------
Example 07 (Original #22)
File: 03\example_22.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2552: Cannot find name 'numbers'. Did you mean 'Number'?
----------------------------------------
const originalUser = { name: "Alice", age: 30 }
const updatedUser = { ...originalUser, age: 31 }

const moreNumbers = [...numbers, 6, 7, 8]

----------------------------------------
Example 08 (Original #24)
File: 03\example_24.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2304: Cannot find name 'Config'.
  • TS2304: Cannot find name 'Config'.
  • TS2304: Cannot find name 'Config'.
  • TS2304: Cannot find name 'config'.
----------------------------------------
type ConfigKeys = keyof Config // "apiUrl" | "timeout" | "retries"

function getConfigValue<K extends keyof Config>(key: K): Config[K] {
  return config[key]
}

const url = getConfigValue("apiUrl") // TypeScript knows this is string

----------------------------------------
Example 09 (Original #31)
File: 03\example_31.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2300: Duplicate identifier 'Partial'.
  • TS2304: Cannot find name 'User'.
  • TS2300: Duplicate identifier 'Partial'.
----------------------------------------
type Partial<T> = {
  [K in keyof T]?: T[K]
}

type PartialUser = Partial<User>
// All properties become optional

----------------------------------------
Example 10 (Original #33)
File: 03\example_33.ts
Language: TypeScript
Source: docs\Chapters\03.md
Status: ❌ HAS ERRORS
Errors:
  • TS2304: Cannot find name 'User'.
----------------------------------------
async function fetchUserData(id: string): Promise<User> {
  try {
    const response = await fetch(`/api/users/${id}`)
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`)
    }
    return await response.json()
  } catch (error) {
    console.error("Failed to fetch user:", error)
    throw error // Re-throw for caller to handle
  } finally {
    console.log("Fetch attempt completed")
  }
}

