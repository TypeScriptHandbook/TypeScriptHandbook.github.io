================================================================================
TYPESCRIPT/JAVASCRIPT BOOK EXAMPLES - CONSOLIDATED TEST FILE
================================================================================

Generated: 2025-07-31 14:36:08
Total examples: 3
TypeScript examples: 2
JavaScript examples: 1
Mode: All examples included
Chapters tested: 1

================================================================================
TYPESCRIPT CHECK RESULTS
================================================================================
✅ All TypeScript examples type check successfully!

================================================================================
JAVASCRIPT CHECK RESULTS
================================================================================
✅ All 96 JavaScript files passed syntax check!

Checking example_01.js: ✅ OK

Checking index.js: ✅ OK

Checking create-require.js: ✅ OK

Checking runtime.js: ✅ OK

Checking index.js: ✅ OK

Checking v8-compile-cache.js: ✅ OK

Checking index.js: ✅ OK

Checking lenient.js: ✅ OK

Checking tsc.js: ✅ OK

Checking tsserver.js: ✅ OK

Checking tsserverlibrary.js: ✅ OK

Checking typescript.js: ✅ OK

Checking typingsInstaller.js: ✅ OK

Checking watchGuard.js: ✅ OK

Checking _tsc.js: ✅ OK

Checking _tsserver.js: ✅ OK

Checking _typingsInstaller.js: ✅ OK

Checking bin-cwd.js: ✅ OK

Checking bin-esm.js: ✅ OK

Checking bin-script-deprecated.js: ✅ OK

Checking bin-script.js: ✅ OK

Checking bin-transpile.js: ✅ OK

Checking bin.js: ✅ OK

Checking cjs-resolve-hooks.js: ✅ OK

Checking configuration.js: ✅ OK

Checking esm.js: ✅ OK

Checking file-extensions.js: ✅ OK

Checking index.js: ✅ OK

Checking module-type-classifier.js: ✅ OK

Checking node-module-type-classifier.js: ✅ OK

Checking repl.js: ✅ OK

Checking resolver-functions.js: ✅ OK

Checking ts-compiler-types.js: ✅ OK

Checking ts-internals.js: ✅ OK

Checking ts-transpile-module.js: ✅ OK

Checking tsconfig-schema.js: ✅ OK

Checking tsconfigs.js: ✅ OK

Checking util.js: ✅ OK

Checking node-internal-constants.js: ✅ OK

Checking node-internal-errors.js: ✅ OK

Checking node-internal-modules-cjs-helpers.js: ✅ OK

Checking node-internal-modules-cjs-loader.js: ✅ OK

Checking node-internal-modules-esm-get_format.js: ✅ OK

Checking node-internal-modules-esm-resolve.js: ✅ OK

Checking node-internal-modules-package_json_reader.js: ✅ OK

Checking node-internal-repl-await.js: ✅ OK

Checking node-internalBinding-fs.js: ✅ OK

Checking node-nativemodule.js: ✅ OK

Checking node-options.js: ✅ OK

Checking node-primordials.js: ✅ OK

Checking runmain-hack.js: ✅ OK

Checking files.js: ✅ OK

Checking index.js: ✅ OK

Checking transpile-only.js: ✅ OK

Checking type-check.js: ✅ OK

Checking swc-experimental.js: ✅ OK

Checking swc.js: ✅ OK

Checking argv-payload.js: ✅ OK

Checking child-entrypoint.js: ✅ OK

Checking child-loader.js: ✅ OK

Checking child-require.js: ✅ OK

Checking spawn-child.js: ✅ OK

Checking swc.js: ✅ OK

Checking types.js: ✅ OK

Checking make-error.js: ✅ OK

Checking diff.js: ✅ OK

Checking diff.min.js: ✅ OK

Checking index.es6.js: ✅ OK

Checking index.js: ✅ OK

Checking dmp.js: ✅ OK

Checking xml.js: ✅ OK

Checking array.js: ✅ OK

Checking base.js: ✅ OK

Checking character.js: ✅ OK

Checking css.js: ✅ OK

Checking json.js: ✅ OK

Checking line.js: ✅ OK

Checking sentence.js: ✅ OK

Checking word.js: ✅ OK

Checking apply.js: ✅ OK

Checking create.js: ✅ OK

Checking merge.js: ✅ OK

Checking parse.js: ✅ OK

Checking array.js: ✅ OK

Checking distance-iterator.js: ✅ OK

Checking params.js: ✅ OK

Checking walk.js: ✅ OK

Checking acorn.js: ✅ OK

Checking bin.js: ✅ OK

Checking trace-mapping.umd.js: ✅ OK

Checking sourcemap-codec.umd.js: ✅ OK

Checking resolve-uri.umd.js: ✅ OK

Checking browser-source-map-support.js: ✅ OK

Checking register-hook-require.js: ✅ OK

Checking register.js: ✅ OK

Checking source-map-support.js: ✅ OK

================================================================================
CHAPTER: 01
Examples: 3
================================================================================

----------------------------------------
Example 01 (Original #1)
File: 01\example_01.js
Language: JavaScript
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
console.log([] + [])  // ""
console.log([] + {})  // "[object Object]"
console.log({} + [])  // 0

console.log(false == 0)   // true
console.log(false === 0)  // false
console.log(NaN === NaN)  // false
console.log(typeof null)  // "object"

----------------------------------------
Example 02 (Original #2)
File: 01\example_02.ts
Language: TypeScript
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
type Point2D = { x: number; y: number }

function logPoint(p: Point2D) {
  console.log(`${p.x}, ${p.y}`)
}

const coordinates = { x: 10, y: 20, z: 30 }
logPoint(coordinates) // OK! `z` is just extra

----------------------------------------
Example 03 (Original #3)
File: 01\example_03.ts
Language: TypeScript
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
type UserId = string & { readonly brand: unique symbol }
type ProductId = string & { readonly brand: unique symbol }

