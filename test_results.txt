================================================================================
TYPESCRIPT BOOK EXAMPLES - CONSOLIDATED TEST FILE
================================================================================

Generated: 2025-07-31 10:07:55
Total examples: 3
Mode: All examples included
Chapters tested: 1

================================================================================
TYPE CHECK RESULTS
================================================================================
❌ Type checking failed:
01/example_03.ts(5,13): error TS2365: Operator '+' cannot be applied to types 'never[]' and 'never[]'.
01/example_03.ts(6,13): error TS2365: Operator '+' cannot be applied to types 'never[]' and '{}'.
01/example_03.ts(7,13): error TS2365: Operator '+' cannot be applied to types '{}' and 'never[]'.
01/example_03.ts(9,13): error TS2367: This comparison appears to be unintentional because the types 'boolean' and 'number' have no overlap.
01/example_03.ts(10,13): error TS2367: This comparison appears to be unintentional because the types 'boolean' and 'number' have no overlap.
01/example_03.ts(11,13): error TS2845: This condition will always return 'false'.


================================================================================
CHAPTER: 01
Examples: 3
================================================================================

----------------------------------------
Example 01 (Original #1)
File: 01\example_01.ts
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
type Point2D = { x: number; y: number }

function logPoint(p: Point2D) {
  console.log(`${p.x}, ${p.y}`)
}

const coordinates = { x: 10, y: 20, z: 30 }
logPoint(coordinates) // OK! `z` is just extra

----------------------------------------
Example 02 (Original #2)
File: 01\example_02.ts
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
type UserId = string & { readonly brand: unique symbol }
type ProductId = string & { readonly brand: unique symbol }

----------------------------------------
Example 03 (Original #3)
File: 01\example_03.ts
Source: docs\Chapters\01.md
Status: ✅ No errors
----------------------------------------
console.log([] + [])  // ""
console.log([] + {})  // "[object Object]"
console.log({} + [])  // 0

console.log(false == 0)   // true
console.log(false === 0)  // false
console.log(NaN === NaN)  // false
console.log(typeof null)  // "object"

